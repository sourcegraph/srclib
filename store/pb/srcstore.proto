syntax = "proto3";
package pb;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "sourcegraph.com/sourcegraph/srclib/unit/unit.proto";
import "sourcegraph.com/sourcegraph/srclib/graph/output.proto";
import "sourcegraph.com/sqs/pbtypes/void.proto";

option (gogoproto.goproto_getters_all) = false;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.marshaler_all) = true;
option (gogoproto.sizer_all) = true;

// A MultiRepoImporter imports srclib build data for a repository's
// source unit at a specific version into a RepoStore. It allows
// performing import operations over gRPC.
service MultiRepoImporter {
	// Import imports srclib build data for a source unit at a
	// specific version into the store.
	rpc Import(ImportOp) returns (pbtypes.Void);
	
	// CreateVersion creates the version entry for the given commit. All other data (including
	// indexes) needs to exist before this gets called.
	rpc CreateVersion(CreateVersionOp) returns (pbtypes.Void);

	// Index builds indexes for a specific repo at a specific version.
	rpc Index(IndexOp) returns (pbtypes.Void);
}

message ImportOp {
	string Repo = 1;
	string CommitID = 2;
	unit.SourceUnit Unit = 3;
	graph.Output Data = 4;
}

message CreateVersionOp {
	string Repo = 1;
	string CommitID = 2;
}

message IndexOp {
	string Repo = 1;
	string CommitID = 2;
}
